{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/Controls.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/lib/loadGLTF.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/customizeShader.js","webpack:///./src/scene/Ephebe.js","webpack:///./src/scene/Hills.js","webpack:///./src/lib/ReflectorPostprocessing.js","webpack:///./src/scene/Reflection.js","webpack:///./src/lib/XRState.js","webpack:///./src/lib/SMAAEffect.js","webpack:///./src/lib/xr-utils.js","webpack:///./src/lib/ContactShadow.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","controls","_colorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","mapValues","obj","fn","fromEntries","entries","map","k","v","fromObjectToSlider","State","Slider","min","max","step","scale","mapping","x","Math","pow","inverseMapping","log10","initControls","options","stateObject","controlsState","controlsInstance","hideControls","wrapGUI","expanded","closeControls","styles","style","document","createElement","type","innerHTML","head","appendChild","extractAccessor","fnString","accessorStart","indexOf","trim","wireUniform","accessor","toString","includes","lastIndexOf","$onChanges","cons","uniforms","isColor","set","startsWith","THREE","WebGLApp","background","backgroundAlpha","fov","frustumSize","near","far","isRunning","time","dt","performance","now","resize","width","height","pixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","left","right","top","bottom","updateProjectionMatrix","composer","scene","traverse","draw","saveScreenshot","fileName","dataURI","canvas","toDataURL","saveDataURI","startRecording","format","CCapture","workersPath","motionBlurFrames","start","stopRecording","stop","save","undefined","update","xrframe","orbitControls","isTransformControls","world","cannonDebugger","bodies","forEach","body","isXR","xr","enabled","isPresenting","render","setAnimationLoop","animate","stats","begin","maxDeltaTime","capture","end","this","antialias","postprocessing","alpha","preserveDrawingBuffer","sortObjects","gamma","outputEncoding","domElement","setClearColor","maxPixelRatio","orthographic","position","copy","cameraPosition","lookAt","gl","getContext","addEventListener","isDragging","event","isPrimary","offsetX","offsetY","child","onPointerDown","y","dragX","dragY","onPointerMove","onPointerUp","maxMultisampling","getParameter","MAX_SAMPLES","EffectComposer","multisampling","frameBufferType","addPass","RenderPass","OrbitControls","enableDamping","dampingFactor","enablePan","keys","showWorldWireframes","autoUpdate","showFps","Stats","showPanel","dom","loadGPUTier","getGPUTier","glContext","then","gpuTier","gpu","tier","isMobile","fps","getClearColor","getClearAlpha","Boolean","index","innerWidth","innerHeight","devicePixelRatio","cursor","blob","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","loadEnvMap","url","loader","Error","Array","isArray","extension","RGBELoader","setDataType","loadAsync","EXRLoader","texture","linear","encoding","pmrem","pmremGenerator","compileEquirectangularShader","cubeRenderTarget","fromEquirectangular","dispose","image","equirectangularToPMREMCube","equirectangularToCube","HDRCubeTextureLoader","compileCubemapShader","fromCubemap","cubeToPMREMCube","filter","option","TypeError","queued","_getQueued","queuedOptions","omit","JSON","stringify","hash","toFixed","replace","_extractType","find","item","ext","test","itemLoadingStart","_loadItem","DEBUG","console","log","prettyMs","secondsDecimalDigits","error","queue","total","loadingStart","pMap","logError","percent","concurrency","errors","groupLog","Promise","resolve","reject","GLTFLoader","meshOpt","setMeshoptDecoder","MeshoptDecoder","draco","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","load","err","loadGLTF","fetch","response","json","loadImage","crossorigin","initTexture","loadTexture","arrayBuffer","text","groupCollapsed","groupEnd","addUniforms","material","prepareOnBeforeCompile","addBeforeCompileListener","shader","constructOnBeforeCompile","customizeVertexShader","hooks","vertexShader","monkeyPatch","customizeFragmentShader","fragmentShader","beforeCompileListeners","onBeforeCompile","defines","main","transformed","objectNormal","transformedNormal","diffuse","emissive","gl_FragColor","replaces","patchedShader","replaceAll","str","rep","split","join","stringDefines","ephebeKey","assets","envmapKey","Ephebe","webgl","ephebe","gltf","isMesh","frustumCulled","mixer","clip","animations","clipAction","play","skinning","roughness","metalness","envMap","powerFactor","multiplicator","multiplyScalar","rotateY","PI","translateX","translateY","onUpdate","speed","Hills","envMapIntensity","timeFixed","hills","firstColor","secondColor","geometry","rotateX","mesh","add","ReflectorShader","color","tDiffuse","textureMatrix","ReflectorPostprocessing","Color","textureWidth","textureHeight","clipBias","reflectorPlane","Plane","normal","Vector3","reflectorWorldPosition","cameraWorldPosition","rotationMatrix","Matrix4","lookAtPosition","clipPlane","Vector4","view","target","q","virtualCamera","PerspectiveCamera","renderTarget","WebGLRenderTarget","minFilter","LinearFilter","magFilter","RGBAFormat","MathUtils","isPowerOfTwo","generateMipmaps","currentXrEnabled","currentShadowAutoUpdate","ShaderMaterial","UniformsUtils","clone","transparent","onBeforeRender","setFromMatrixPosition","matrixWorld","extractRotation","applyMatrix4","subVectors","dot","reflect","negate","up","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","z","constant","sign","elements","w","visible","shadowMap","state","buffers","depth","setMask","onAfterRender","viewport","lambdaPassBefore","LambdaPass","renderPass","savePass","SavePass","lambdaPassAfter","Mesh","Reflection","groundMirror","reflected","XRState","reticle","controller","_pointerDownListeners","_pointerUpListeners","_firstHitListeners","_hitTestSourceRequested","_hitTestSource","_initialized","_onSelectStart","listener","_onSelectEnd","opacity","depthWrite","matrixAutoUpdate","getController","removeEventListener","xframe","session","getSession","requestReferenceSpace","space","requestHitTestSource","hitTestResults","getHitTestResults","hit","referenceSpace","getReferenceSpace","getPose","transform","matrix","pose","fromArray","SMAAEffect","SMAAImageLoader","search","area","smaaEffect","SMAAEffectPostproccessing","isARSupported","navigator","isSessionSupported","supported","ContactShadow","RESOLUTION","resolution","PLANE_WIDTH","PLANE_HEIGHT","CAMERA_DEPTH","BLUR","blur","BLUR_SECOND_PASS","blurSecondPass","DARKNESS","darkness","OPACITY","renderTargetBlur","plane","blurPlane","shadowCamera","rotation","cameraHelper","depthMaterial","depthTest","horizontalBlurMaterial","HorizontalBlurShader","verticalBlurMaterial","VerticalBlurShader","amount","mapLinear","h","setRenderTarget","clear","initialBackground","initialXREnabled","initialMaterials","id","blurShadow","location","querySelector","maxPolarAngle","DOLLY_DELAY","DOLLY_DURATION","autoRotate","autoRotateSpeed","maxDistance","minDistance","startTime","eases","quartInOut","lerp","startTimeRotate","reflection","bloomEffect","BloomEffect","blendFunction","BlendFunction","ADD","kernelSize","KernelSize","LARGE","luminanceThreshold","luminanceSmoothing","vignetteEffect","VignetteEffect","EffectPass","isSupported","button","ui","closeButton","mainScene","xrScene","xrstate","shadow","display","children","fpsCanvas","requestSession","requiredFeatures","domOverlay","root","setReferenceSpaceType","setSession","ephebePosition","ephebeScale","onFirstHit","remove","onARPointerDown","isHitting","once","reset","catch"],"mappings":"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","file":"app.2f208ced.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([349,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as THREE from 'three'\nimport State from 'controls-state'\nimport wrapGUI from 'controls-gui'\n\nlet controls\n\n// https://github.com/mrdoob/three.js/blob/670b1e9e85356d98efa4c702e93c85dd52f01e1e/src/math/Color.js#L3\nconst _colorKeywords = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32,\n}\n\nfunction mapValues(obj, fn) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]))\n}\n\nfunction fromObjectToSlider(object) {\n  return State.Slider(object.value, {\n    min: object.min,\n    max: object.max,\n    step: object.step || 0.01,\n    ...(object.scale === 'exp' && {\n      min: object.min || 0.001,\n      step: object.step || 0.001,\n      mapping: (x) => Math.pow(10, x),\n      inverseMapping: Math.log10,\n    }),\n  })\n}\n\nexport function initControls(object, options = {}) {\n  const stateObject = mapValues(object, (value) => {\n    if (\n      typeof value === 'object' &&\n      (value.hasOwnProperty('value') ||\n        value.hasOwnProperty('max') ||\n        value.hasOwnProperty('min') ||\n        value.hasOwnProperty('step'))\n    ) {\n      return fromObjectToSlider(value)\n    }\n\n    if (typeof value === 'object') {\n      return mapValues(value, (v) => {\n        if (\n          typeof v === 'object' &&\n          (v.hasOwnProperty('value') ||\n            v.hasOwnProperty('max') ||\n            v.hasOwnProperty('min') ||\n            v.hasOwnProperty('step'))\n        ) {\n          return fromObjectToSlider(v)\n        }\n\n        return v\n      })\n    }\n\n    return value\n  })\n\n  const controlsState = State(stateObject)\n  const controlsInstance = options.hideControls\n    ? controlsState\n    : wrapGUI(controlsState, { expanded: !options.closeControls })\n\n  // add the custom controls-gui styles\n  if (!options.hideControls) {\n    const styles = `\n      [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\n        content: initial !important;\n      }\n      [class^=\"controlPanel-\"] [class*=\"__labelText\"] {\n        text-indent: 6px !important;\n      }\n      [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\n        content: initial !important;\n      }\n    `\n    const style = document.createElement('style')\n    style.type = 'text/css'\n    style.innerHTML = styles\n    document.head.appendChild(style)\n  }\n\n  controls = controlsInstance\n  return controlsInstance\n}\n\nfunction extractAccessor(fnString) {\n  if (fnString.slice(-1) === '}') {\n    fnString = fnString.slice(0, -1)\n  }\n\n  const accessorStart = fnString.indexOf('.controls.') + '.controls.'.length\n  fnString = fnString.slice(accessorStart)\n\n  return fnString.trim()\n}\n\nexport function wireValue(object, fn) {\n  const fnString = fn.toString()\n  const accessor = extractAccessor(fnString)\n\n  const key = accessor.includes('.') ? accessor.slice(accessor.lastIndexOf('.') + 1) : accessor\n\n  controls.$onChanges((cons) => {\n    if (cons[accessor]) {\n      if (object[key].isColor) {\n        object[key].set(cons[accessor].value)\n      } else {\n        object[key] = cons[accessor].value\n      }\n    }\n  })\n\n  let value = fn()\n\n  if (typeof value === 'string' && (value.startsWith('#') || value in _colorKeywords)) {\n    value = new THREE.Color(value)\n  }\n\n  return value\n}\n\nexport function wireUniform(object, fn) {\n  const fnString = fn.toString()\n  const accessor = extractAccessor(fnString)\n\n  const key = accessor.includes('.') ? accessor.slice(accessor.lastIndexOf('.') + 1) : accessor\n\n  controls.$onChanges((cons) => {\n    if (cons[accessor]) {\n      if (object.uniforms[key].value.isColor) {\n        object.uniforms[key].value.set(cons[accessor].value)\n      } else {\n        object.uniforms[key].value = cons[accessor].value\n      }\n    }\n  })\n\n  let value = fn()\n\n  if (typeof value === 'string' && (value.startsWith('#') || value in _colorKeywords)) {\n    value = new THREE.Color(value)\n  }\n\n  return { value }\n}\n","import * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport { getGPUTier } from 'detect-gpu'\nimport { EffectComposer, RenderPass } from 'postprocessing'\n// import cannonDebugger from 'cannon-es-debugger'\nimport CCapture from 'ccapture.js'\nimport { initControls } from './Controls'\n\nexport default class WebGLApp {\n  #width\n  #height\n  #capturer\n  isRunning = false\n  time = 0\n  dt = 0\n  #lastTime = performance.now()\n  #updateListeners = []\n  #pointerdownListeners = []\n  #pointermoveListeners = []\n  #pointerupListeners = []\n  #startX\n  #startY\n\n  get background() {\n    return this.renderer.getClearColor(new THREE.Color())\n  }\n\n  get backgroundAlpha() {\n    return this.renderer.getClearAlpha()\n  }\n\n  set background(background) {\n    this.renderer.setClearColor(background, this.backgroundAlpha)\n  }\n\n  set backgroundAlpha(backgroundAlpha) {\n    this.renderer.setClearColor(this.background, backgroundAlpha)\n  }\n\n  get isRecording() {\n    return Boolean(this.#capturer)\n  }\n\n  constructor({\n    background = '#111',\n    backgroundAlpha = 1,\n    fov = 45,\n    frustumSize = 3,\n    near = 0.01,\n    far = 100,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: !options.postprocessing,\n      alpha: backgroundAlpha !== 1,\n      // enabled for recording gifs or videos,\n      // might disable it for performance reasons\n      preserveDrawingBuffer: true,\n      ...options,\n    })\n    if (options.sortObjects !== undefined) {\n      this.renderer.sortObjects = options.sortObjects\n    }\n    if (options.gamma) {\n      this.renderer.outputEncoding = THREE.sRGBEncoding\n    }\n    if (options.xr) {\n      this.renderer.xr.enabled = true\n    }\n\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    // save the fixed dimensions\n    this.#width = options.width\n    this.#height = options.height\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 1.5\n    // clamp delta to avoid stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup the camera\n    const aspect = this.#width / this.#height\n    if (!options.orthographic) {\n      this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far)\n    } else {\n      this.camera = new THREE.OrthographicCamera(\n        -(frustumSize * aspect) / 2,\n        (frustumSize * aspect) / 2,\n        frustumSize / 2,\n        -frustumSize / 2,\n        near,\n        far\n      )\n      this.camera.frustumSize = frustumSize\n    }\n    this.camera.position.copy(options.cameraPosition || new THREE.Vector3(0, 0, 4))\n    this.camera.lookAt(0, 0, 0)\n\n    this.scene = new THREE.Scene()\n\n    this.gl = this.renderer.getContext()\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic pointer events handler, the second argument\n    // contains the x and y relative to the top left corner\n    // of the canvas.\n    // In case of touches with multiple fingers, only the\n    // first touch is registered.\n    this.isDragging = false\n    this.canvas.addEventListener('pointerdown', (event) => {\n      if (!event.isPrimary) return\n      this.isDragging = true\n      this.#startX = event.offsetX\n      this.#startY = event.offsetY\n      // call onPointerDown method\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerDown === 'function') {\n          child.onPointerDown(event, { x: event.offsetX, y: event.offsetY })\n        }\n      })\n      // call the pointerdown listeners\n      this.#pointerdownListeners.forEach((fn) => fn(event, { x: event.offsetX, y: event.offsetY }))\n    })\n    this.canvas.addEventListener('pointermove', (event) => {\n      if (!event.isPrimary) return\n      // call onPointerMove method\n      const position = {\n        x: event.offsetX,\n        y: event.offsetY,\n        ...(this.#startX !== undefined && { dragX: event.offsetX - this.#startX }),\n        ...(this.#startY !== undefined && { dragY: event.offsetY - this.#startY }),\n      }\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerMove === 'function') {\n          child.onPointerMove(event, position)\n        }\n      })\n      // call the pointermove listeners\n      this.#pointermoveListeners.forEach((fn) => fn(event, position))\n    })\n    this.canvas.addEventListener('pointerup', (event) => {\n      if (!event.isPrimary) return\n      this.isDragging = false\n      // call onPointerUp method\n      const position = {\n        x: event.offsetX,\n        y: event.offsetY,\n        ...(this.#startX !== undefined && { dragX: event.offsetX - this.#startX }),\n        ...(this.#startY !== undefined && { dragY: event.offsetY - this.#startY }),\n      }\n      this.scene.traverse((child) => {\n        if (typeof child.onPointerUp === 'function') {\n          child.onPointerUp(event, position)\n        }\n      })\n      // call the pointerup listeners\n      this.#pointerupListeners.forEach((fn) => fn(event, position))\n\n      this.#startX = undefined\n      this.#startY = undefined\n    })\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      const maxMultisampling = this.gl.getParameter(this.gl.MAX_SAMPLES)\n      this.composer = new EffectComposer(this.renderer, {\n        multisampling: Math.min(8, maxMultisampling),\n        frameBufferType: options.gamma ? THREE.HalfFloatType : undefined,\n        ...options,\n      })\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up OrbitControls\n    if (options.orbitControls) {\n      this.orbitControls = new OrbitControls(this.camera, this.canvas)\n\n      this.orbitControls.enableDamping = true\n      this.orbitControls.dampingFactor = 0.15\n      this.orbitControls.enablePan = false\n\n      if (options.orbitControls instanceof Object) {\n        Object.keys(options.orbitControls).forEach((key) => {\n          this.orbitControls[key] = options.orbitControls[key]\n        })\n      }\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) {\n      this.world = options.world\n      if (options.showWorldWireframes) {\n        this.cannonDebugger = cannonDebugger(this.scene, this.world.bodies, { autoUpdate: false })\n      }\n    }\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the controls-state\n    if (options.controls) {\n      this.controls = initControls(options.controls, options)\n    }\n\n    // detect the gpu info\n    this.loadGPUTier = getGPUTier({ glContext: this.gl }).then((gpuTier) => {\n      this.gpu = {\n        name: gpuTier.gpu,\n        tier: gpuTier.tier,\n        isMobile: gpuTier.isMobile,\n        fps: gpuTier.fps,\n      }\n    })\n  }\n\n  get width() {\n    return this.#width || window.innerWidth\n  }\n\n  get height() {\n    return this.#height || window.innerHeight\n  }\n\n  get pixelRatio() {\n    return Math.min(this.maxPixelRatio, window.devicePixelRatio)\n  }\n\n  resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    } else {\n      const aspect = width / height\n      this.camera.left = -(this.camera.frustumSize * aspect) / 2\n      this.camera.right = (this.camera.frustumSize * aspect) / 2\n      this.camera.top = this.camera.frustumSize / 2\n      this.camera.bottom = -this.camera.frustumSize / 2\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer, width and height\n    // are automatically extracted from the renderer\n    if (this.composer) {\n      this.composer.setSize()\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse((obj) => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 1920, height = 1080, fileName = 'Screenshot.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  // start recording of a gif or a video\n  startRecording = ({\n    width = 1920,\n    height = 1080,\n    fileName = 'Recording',\n    format = 'gif',\n    ...options\n  } = {}) => {\n    if (this.#capturer) {\n      return\n    }\n\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    this.#capturer = new CCapture({\n      format,\n      name: fileName,\n      workersPath: '',\n      motionBlurFrames: 2,\n      ...options,\n    })\n    this.#capturer.start()\n  }\n\n  stopRecording = () => {\n    if (!this.#capturer) {\n      return\n    }\n\n    this.#capturer.stop()\n    this.#capturer.save()\n    this.#capturer = undefined\n\n    // reset to default size\n    this.resize()\n    this.draw()\n  }\n\n  update = (dt, time, xrframe) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse((obj) => {\n      if (typeof obj.update === 'function' && !obj.isTransformControls) {\n        obj.update(dt, time, xrframe)\n      }\n    })\n\n    if (this.world) {\n      // update the cannon-es physics engine\n      this.world.step(1 / 60, dt)\n\n      // update the debug wireframe renderer\n      if (this.cannonDebugger) {\n        this.cannonDebugger.update()\n      }\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach((body) => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach((fn) => fn(dt, time, xrframe))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  onPointerDown(fn) {\n    this.#pointerdownListeners.push(fn)\n  }\n\n  onPointerMove(fn) {\n    this.#pointermoveListeners.push(fn)\n  }\n\n  onPointerUp(fn) {\n    this.#pointerupListeners.push(fn)\n  }\n\n  offUpdate(fn) {\n    const index = this.#updateListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#updateListeners.splice(index, 1)\n  }\n\n  offPointerDown(fn) {\n    const index = this.#pointerdownListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointerdownListeners.splice(index, 1)\n  }\n\n  offPointerMove(fn) {\n    const index = this.#pointermoveListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointermoveListeners.splice(index, 1)\n  }\n\n  offPointerUp(fn) {\n    const index = this.#pointerupListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#pointerupListeners.splice(index, 1)\n  }\n\n  draw = () => {\n    // postprocessing doesn't currently work in WebXR\n    const isXR = this.renderer.xr.enabled && this.renderer.xr.isPresenting\n\n    if (this.composer && !isXR) {\n      this.composer.render(this.dt)\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.isRunning) return\n    this.isRunning = true\n\n    // draw immediately\n    this.draw()\n\n    this.renderer.setAnimationLoop(this.animate)\n    return this\n  }\n\n  stop = () => {\n    if (!this.isRunning) return\n    this.renderer.setAnimationLoop(null)\n    this.isRunning = false\n    return this\n  }\n\n  animate = (now, xrframe) => {\n    if (!this.isRunning) return\n\n    if (this.stats) this.stats.begin()\n\n    this.dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += this.dt\n    this.#lastTime = now\n    this.update(this.dt, this.time, xrframe)\n    this.draw()\n\n    if (this.#capturer) this.#capturer.capture(this.canvas)\n\n    if (this.stats) this.stats.end()\n  }\n\n  get cursor() {\n    return this.canvas.style.cursor\n  }\n\n  set cursor(cursor) {\n    if (cursor) {\n      this.canvas.style.cursor = cursor\n    } else {\n      this.canvas.style.cursor = null\n    }\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","import * as THREE from 'three'\n// TODO lazy load these, or put them in different files\n// import { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader'\nimport { EXRLoader } from 'three/examples/jsm/loaders/EXRLoader'\n// import { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\n\nexport default function loadEnvMap(url, { renderer, ...options }) {\n  if (!renderer) {\n    throw new Error(`Env map requires renderer to passed in the options for ${url}!`)\n  }\n\n  const isEquirectangular = !Array.isArray(url)\n\n  let loader\n  if (isEquirectangular) {\n    const extension = url.slice(url.lastIndexOf('.') + 1)\n\n    switch (extension) {\n      case 'hdr': {\n        loader = new RGBELoader().setDataType(THREE.UnsignedByteType).loadAsync(url)\n        break\n      }\n      case 'exr': {\n        loader = new EXRLoader().setDataType(THREE.UnsignedByteType).loadAsync(url)\n        break\n      }\n      case 'png':\n      case 'jpg': {\n        loader = new THREE.TextureLoader().loadAsync(url).then((texture) => {\n          if (renderer.outputEncoding === THREE.sRGBEncoding && !options.linear) {\n            texture.encoding = THREE.sRGBEncoding\n          }\n          return texture\n        })\n        break\n      }\n      default: {\n        throw new Error(`Extension ${extension} not supported`)\n      }\n    }\n\n    loader = loader.then((texture) => {\n      if (options.pmrem) {\n        return equirectangularToPMREMCube(texture, renderer)\n      } else {\n        return equirectangularToCube(texture)\n      }\n    })\n  } else {\n    const extension = url[0].slice(url.lastIndexOf('.') + 1)\n\n    switch (extension) {\n      case 'hdr': {\n        loader = new HDRCubeTextureLoader().setDataType(THREE.UnsignedByteType).loadAsync(url)\n        break\n      }\n      case 'png':\n      case 'jpg': {\n        loader = new THREE.CubeTextureLoader().loadAsync(url).then((texture) => {\n          if (renderer.outputEncoding === THREE.sRGBEncoding && !options.linear) {\n            texture.encoding = THREE.sRGBEncoding\n          }\n          return texture\n        })\n        break\n      }\n      default: {\n        throw new Error(`Extension ${extension} not supported`)\n      }\n    }\n\n    loader = loader.then((texture) => {\n      if (options.pmrem) {\n        return cubeToPMREMCube(texture, renderer)\n      } else {\n        return texture\n      }\n    })\n  }\n\n  // apply eventual texture options, such as wrap, repeat...\n  const textureOptions = Object.keys(options).filter(\n    (option) => !['pmrem', 'linear'].includes(option)\n  )\n  textureOptions.forEach((option) => {\n    loader = loader.then((texture) => {\n      texture[option] = options[option]\n      return texture\n    })\n  })\n\n  return loader\n}\n\n// prefilter the equirectangular environment map for irradiance\nfunction equirectangularToPMREMCube(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileEquirectangularShader()\n\n  const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// prefilter the cubemap environment map for irradiance\nfunction cubeToPMREMCube(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileCubemapShader()\n\n  const cubeRenderTarget = pmremGenerator.fromCubemap(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// transform an equirectangular texture to a cubetexture that\n// can be used as an envmap or scene background\nfunction equirectangularToCube(texture) {\n  texture.mapping = THREE.EquirectangularReflectionMapping\n  return texture\n}\n","import pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport omit from 'lodash/omit'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\nimport loadGLTF from './loadGLTF'\n\nclass AssetManager {\n  #queue = []\n  #loaded = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n\n    const queued = this._getQueued(url)\n    if (queued) {\n      // if it's already present, add only if the options are different\n      const queuedOptions = omit(queued, ['url', 'type'])\n      if (JSON.stringify(options) !== JSON.stringify(queuedOptions)) {\n        const hash = performance.now().toFixed(3).replace('.', '')\n        const key = `${url}.${hash}`\n        this.#queue.push({ key, url, type: type || this._extractType(url), ...options })\n        return key\n      }\n\n      return queued.url\n    }\n\n    this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find((item) => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = (key) => {\n    if (!key) throw new TypeError('Must specify an URL for AssetManager.get()')\n\n    return this.#loaded[key]\n  }\n\n  // Loads a single asset on demand.\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = performance.now()\n\n      const key = item.key || item.url\n      if (!(key in this.#loaded)) {\n        this.#loaded[key] = await this._loadItem({ renderer, ...item })\n      }\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(\n            performance.now() - itemLoadingStart,\n            { secondsDecimalDigits: 3 }\n          )}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return key\n    } catch (err) {\n      console.error(`📦 Asset ${item.url} was not loaded:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach((fn) => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = performance.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = performance.now()\n\n          const key = item.key || item.url\n          if (!(key in this.#loaded)) {\n            this.#loaded[key] = await this._loadItem({ renderer, ...item })\n          }\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(performance.now() - itemLoadingStart, {\n                secondsDecimalDigits: 3,\n              })}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Asset ${item.url} was not loaded:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach((fn) => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter((log) => log.type === 'error')\n\n      if (errors.length === 0) {\n        this.groupLog(\n          `📦 Assets loaded in ${prettyMs(performance.now() - loadingStart, {\n            secondsDecimalDigits: 3,\n          })} ⏱`\n        )\n      } else {\n        this.groupLog(\n          `📦 %c Could not load ${errors.length} asset${errors.length > 1 ? 's' : ''} `,\n          'color:white;background:red;'\n        )\n      }\n    }\n  }\n\n  // Loads a single asset.\n  _loadItem({ url, type, renderer, ...options }) {\n    switch (type) {\n      case 'gltf':\n        return loadGLTF(url, options)\n      case 'json':\n        return fetch(url).then((response) => response.json())\n      case 'envmap':\n      case 'envMap':\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach((log) => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine,\n// fucking java patterns\nexport default new AssetManager()\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader'\n// import { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module'\n\nexport default function loadGLTF(url, options = {}) {\n  return new Promise((resolve, reject) => {\n    const loader = new GLTFLoader()\n\n    if (options.meshOpt) {\n      loader.setMeshoptDecoder(MeshoptDecoder)\n    } else if (options.draco) {\n      const dracoLoader = new DRACOLoader()\n      dracoLoader.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/')\n      loader.setDRACOLoader(dracoLoader)\n    }\n\n    loader.load(url, resolve, null, (err) =>\n      reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n    )\n  })\n}\n","import * as THREE from 'three'\n\nexport default function loadTexture(url, { renderer, ...options }) {\n  if (!renderer) {\n    throw new Error(`Texture requires renderer to passed in the options for ${url}!`)\n  }\n\n  return new Promise((resolve, reject) => {\n    new THREE.TextureLoader().load(\n      url,\n      (texture) => {\n        // apply eventual gamma encoding\n        if (renderer.outputEncoding === THREE.sRGBEncoding && !options.linear) {\n          texture.encoding = THREE.sRGBEncoding\n        }\n\n        // apply eventual texture options, such as wrap, repeat...\n        const textureOptions = Object.keys(options).filter((option) => !['linear'].includes(option))\n        textureOptions.forEach((option) => {\n          texture[option] = options[option]\n        })\n\n        // Force texture to be uploaded to GPU immediately,\n        // this will avoid \"jank\" on first rendered frame\n        renderer.initTexture(texture)\n\n        resolve(texture)\n      },\n      null,\n      (err) => reject(new Error(`Could not load texture ${url}:\\n${err}`))\n    )\n  })\n}\n","export function addDefines(material, defines) {\n  prepareOnBeforeCompile(material)\n\n  material.defines = defines\n\n  material.addBeforeCompileListener((shader) => {\n    material.defines = {\n      ...material.defines,\n      ...shader.defines,\n    }\n\n    shader.defines = material.defines\n  })\n\n  constructOnBeforeCompile(material)\n}\n\nexport function addUniforms(material, uniforms) {\n  prepareOnBeforeCompile(material)\n\n  material.uniforms = uniforms\n\n  material.addBeforeCompileListener((shader) => {\n    material.uniforms = {\n      ...material.uniforms,\n      ...shader.uniforms,\n    }\n\n    shader.uniforms = material.uniforms\n  })\n\n  constructOnBeforeCompile(material)\n}\n\nexport function customizeVertexShader(material, hooks) {\n  prepareOnBeforeCompile(material)\n\n  material.addBeforeCompileListener((shader) => {\n    shader.vertexShader = monkeyPatch(shader.vertexShader, hooks)\n  })\n\n  constructOnBeforeCompile(material)\n}\n\nexport function customizeFragmentShader(material, hooks) {\n  prepareOnBeforeCompile(material)\n\n  material.addBeforeCompileListener((shader) => {\n    shader.fragmentShader = monkeyPatch(shader.fragmentShader, hooks)\n  })\n\n  constructOnBeforeCompile(material)\n}\n\nfunction prepareOnBeforeCompile(material) {\n  if (material.beforeCompileListeners) {\n    return\n  }\n\n  material.beforeCompileListeners = []\n  material.addBeforeCompileListener = (fn) => {\n    material.beforeCompileListeners.push(fn)\n  }\n}\n\nfunction constructOnBeforeCompile(material) {\n  material.onBeforeCompile = (shader) => {\n    material.beforeCompileListeners.forEach((fn) => fn(shader))\n  }\n}\n\nexport function monkeyPatch(\n  shader,\n  {\n    defines = '',\n    head = '',\n    main = '',\n    transformed,\n    objectNormal,\n    transformedNormal,\n    diffuse,\n    emissive,\n    gl_FragColor,\n    ...replaces\n  }\n) {\n  let patchedShader = shader\n\n  const replaceAll = (str, find, rep) => str.split(find).join(rep)\n  Object.keys(replaces).forEach((key) => {\n    patchedShader = replaceAll(patchedShader, key, replaces[key])\n  })\n\n  patchedShader = patchedShader.replace(\n    'void main() {',\n    `\n    ${head}\n    void main() {\n      ${main}\n    `\n  )\n\n  if (transformed && patchedShader.includes('#include <begin_vertex>')) {\n    patchedShader = patchedShader.replace(\n      '#include <begin_vertex>',\n      `#include <begin_vertex>\n      ${transformed}\n      `\n    )\n  }\n\n  if (objectNormal && patchedShader.includes('#include <beginnormal_vertex>')) {\n    patchedShader = patchedShader.replace(\n      '#include <beginnormal_vertex>',\n      `#include <beginnormal_vertex>\n      ${objectNormal}\n      `\n    )\n  }\n\n  if (transformedNormal && patchedShader.includes('#include <defaultnormal_vertex>')) {\n    patchedShader = patchedShader.replace(\n      '#include <defaultnormal_vertex>',\n      `#include <defaultnormal_vertex>\n      ${transformedNormal}\n      `\n    )\n  }\n\n  if (diffuse && patchedShader.includes('vec4 diffuseColor = vec4( diffuse, opacity );')) {\n    patchedShader = patchedShader.replace(\n      'vec4 diffuseColor = vec4( diffuse, opacity );',\n      `\n      vec3 diffuse_;\n      ${replaceAll(diffuse, 'diffuse =', 'diffuse_ =')}\n      vec4 diffuseColor = vec4(diffuse_, opacity);\n      `\n    )\n  }\n\n  if (emissive && patchedShader.includes('vec3 totalEmissiveRadiance = emissive;')) {\n    patchedShader = patchedShader.replace(\n      'vec3 totalEmissiveRadiance = emissive;',\n      `\n      vec3 emissive_;\n      ${replaceAll(emissive, 'emissive =', 'emissive_ =')}\n      vec3 totalEmissiveRadiance = emissive_;\n      `\n    )\n  }\n\n  if (\n    gl_FragColor &&\n    patchedShader.includes('gl_FragColor = vec4( outgoingLight, diffuseColor.a );')\n  ) {\n    patchedShader = patchedShader.replace(\n      'gl_FragColor = vec4( outgoingLight, diffuseColor.a );',\n      `\n        gl_FragColor = vec4(outgoingLight, diffuseColor.a);\n        ${gl_FragColor}\n      `\n    )\n  }\n\n  const stringDefines = Object.keys(defines)\n    .map((d) => `#define ${d} ${defines[d]}`)\n    .join('\\n')\n\n  return `\n    ${stringDefines}\n    ${patchedShader}\n  `\n}\n","import * as THREE from 'three'\nimport glsl from 'glslify'\nimport assets from '../lib/AssetManager'\nimport { wireUniform } from '../lib/Controls'\nimport { addUniforms, customizeVertexShader, customizeFragmentShader } from '../lib/customizeShader'\n\nconst ephebeKey = assets.queue({\n  url: 'assets/ephebe_twerking.glb',\n  type: 'gltf',\n})\n\nconst envmapKey = assets.queue({\n  url: 'assets/envMaps/49TH_STREET.exr',\n  type: 'envmap',\n  pmrem: true,\n})\n\nexport function Ephebe(webgl, options = {}) {\n  const gltf = assets.get(ephebeKey)\n  // BUG gltf.scene.clone() doesn't clone skinning\n  const scene = gltf.scene\n  let ephebe\n  scene.traverse((child) => {\n    if (child.isMesh) {\n      ephebe = child\n    }\n  })\n\n  // do not make it disappear when camera is close\n  ephebe.frustumCulled = false\n\n  const mixer = new THREE.AnimationMixer(scene)\n  const clip = gltf.animations[0]\n  mixer.clipAction(clip).play()\n\n  ephebe.material = new THREE.MeshPhysicalMaterial({\n    skinning: true,\n    roughness: 0.25,\n    metalness: 1,\n    envMap: assets.get(envmapKey),\n  })\n\n  addUniforms(ephebe.material, {\n    time: { value: 0 },\n    // powerFactor: { value: webgl.controls.ephebe.powerFactor },\n    // multiplicator: { value: webgl.controls.ephebe.multiplicator },\n    powerFactor: wireUniform(ephebe.material, () => webgl.controls.ephebe.powerFactor),\n    multiplicator: wireUniform(ephebe.material, () => webgl.controls.ephebe.multiplicator),\n  })\n\n  customizeVertexShader(ephebe.material, {\n    head: glsl`\n      out vec3 vTransformed;\n    `,\n    // after skinning, export the position in world space\n    '#include <skinning_vertex>': glsl`\n      #include <skinning_vertex>\n\n      vTransformed = vec3(modelMatrix * vec4(transformed, 1.0));\n    `,\n    // like MeshNormalMaterial, but the normals are relative to world not camera\n    // transformedNormal is later outputted to the fragment shader as vNormal\n    transformedNormal: glsl`\n      transformedNormal = mat3(modelMatrix) * objectNormal;\n    `,\n  })\n\n  customizeFragmentShader(ephebe.material, {\n    head: glsl`\n      uniform float time;\n      uniform float powerFactor;\n      uniform float multiplicator;\n\n      in vec3 vTransformed;\n\n      #pragma glslify: hsl2rgb = require(glsl-hsl2rgb)\n      #pragma glslify: blendOverlay = require(glsl-blend/overlay)\n    `,\n    main: glsl`\n      vec3 cameraDirection = normalize(cameraPosition - vTransformed);\n\n      // 1 when facing the camera, 0 when perpendicular\n      float fresnel = dot(vNormal, cameraDirection);\n\n      float iridescence = pow(fresnel, powerFactor) * multiplicator;\n\n      // circle the whole hue wheel,\n      // the function looks like this /|/|/|/|/\n      float f = mod(iridescence + time, 1.0);\n\n      vec3 iridescentColor = hsl2rgb(f, 1.0, 0.5);\n    `,\n    diffuse: glsl`\n      diffuse = iridescentColor;\n    `,\n    // blend it again on top of all the lighting with\n    // overlay blend mode\n    gl_FragColor: glsl`\n      gl_FragColor.rgb = blendOverlay(gl_FragColor.rgb, iridescentColor);\n    `,\n  })\n\n  scene.scale.multiplyScalar(0.25)\n  scene.rotateY(Math.PI)\n  scene.translateX(-0.1)\n  scene.translateY(0.15)\n\n  webgl.onUpdate((dt) => {\n    mixer.update(dt)\n\n    ephebe.material.uniforms.time.value += dt * webgl.controls.ephebe.speed\n  })\n\n  return scene\n}\n","import * as THREE from 'three'\nimport glsl from 'glslify'\nimport assets from '../lib/AssetManager'\nimport { addUniforms, customizeVertexShader, customizeFragmentShader } from '../lib/customizeShader'\nimport { wireUniform } from '../lib/Controls'\n\nconst SIZE = 20\nconst RESOLUTION = 256\n\nconst envmapKey = assets.queue({\n  url: 'assets/envMaps/49TH_STREET.exr',\n  type: 'envmap',\n  pmrem: true,\n})\n\nexport class Hills extends THREE.Group {\n  constructor(webgl, options = {}) {\n    super(options)\n    this.webgl = webgl\n    this.options = options\n\n    this.material = new THREE.MeshStandardMaterial({\n      roughness: 0.2,\n      metalness: 1,\n      envMap: assets.get(envmapKey),\n      envMapIntensity: 0.5,\n    })\n\n    // TODO define this api\n    // subscribe(webgl.controls.hills.roughness, (value) => {\n    //   material.roughness = vaule\n    // })\n\n    // which becomes\n\n    // subscribe(material, webgl.controls.hills.roughness)\n\n    // webgl.controlsObservable.hills.roughness.onChange((value) => {\n    //   material.roughness = vaule\n    // })\n\n    // // which becomes\n\n    // webgl.controlsObservable.hills.roughness.onChange(material)\n\n    addUniforms(this.material, {\n      time: { value: 0 },\n      timeFixed: { value: 0 },\n      // powerFactor: { value: this.webgl.controls.hills.powerFactor },\n      // multiplicator: { value: this.webgl.controls.hills.multiplicator },\n      powerFactor: wireUniform(this.material, () => this.webgl.controls.hills.powerFactor),\n      multiplicator: wireUniform(this.material, () => this.webgl.controls.hills.multiplicator),\n      firstColor: wireUniform(this.material, () => this.webgl.controls.hills.firstColor),\n      secondColor: wireUniform(this.material, () => this.webgl.controls.hills.secondColor),\n    })\n\n    customizeVertexShader(this.material, {\n      head: glsl`\n        uniform float timeFixed;\n\n        out vec3 vPosition;\n\n        #pragma glslify: noise = require(glsl-noise/simplex/3d)\n        #pragma glslify: hypot = require(glsl-hypot)\n\n        // http://lolengine.net/blog/2013/09/21/picking-orthogonal-vector-combing-coconuts\n        vec3 orthogonal(vec3 v) {\n          return normalize(abs(v.x) > abs(v.z) ? vec3(-v.y, v.x, 0.0)\n          : vec3(0.0, -v.z, v.y));\n        }\n\n        // the function which defines the displacement\n        float frequency = 0.4;\n        float speed = 0.05;\n        float displace(vec3 point) {\n          // distance from center\n          float distance = hypot(point.xz);\n\n          float amplitude = pow(distance, 2.0) * 0.05;\n\n          return (noise(vec3(point.xz * frequency, timeFixed * speed)) * 0.5 + 0.5) * amplitude;\n        }\n      `,\n      main: glsl`\n        vec3 displacedPosition = position + normal * displace(position);\n\n        float offset = ${SIZE / RESOLUTION};\n        vec3 tangent = orthogonal(normal);\n        vec3 bitangent = normalize(cross(normal, tangent));\n        vec3 neighbour1 = position + tangent * offset;\n        vec3 neighbour2 = position + bitangent * offset;\n        vec3 displacedNeighbour1 = neighbour1 + normal * displace(neighbour1);\n        vec3 displacedNeighbour2 = neighbour2 + normal * displace(neighbour2);\n\n        // https://i.ya-webdesign.com/images/vector-normals-tangent-16.png\n        vec3 displacedTangent = displacedNeighbour1 - displacedPosition;\n        vec3 displacedBitangent = displacedNeighbour2 - displacedPosition;\n\n        // https://upload.wikimedia.org/wikipedia/commons/d/d2/Right_hand_rule_cross_product.svg\n        vec3 displacedNormal = normalize(cross(displacedTangent, displacedBitangent));\n      `,\n      transformed: glsl`\n        transformed = displacedPosition;\n        vPosition = transformed;\n      `,\n      objectNormal: glsl`\n        objectNormal = displacedNormal;\n      `,\n      // like MeshNormalMaterial, but the normals are relative to world not camera\n      transformedNormal: glsl`\n        transformedNormal = mat3(modelMatrix) * objectNormal;\n      `,\n    })\n\n    customizeFragmentShader(this.material, {\n      head: glsl`\n        uniform float time;\n        uniform float powerFactor;\n        uniform float multiplicator;\n        uniform vec3 firstColor;\n        uniform vec3 secondColor;\n\n        in vec3 vPosition;\n      `,\n      main: glsl`\n        // The camera sometimes would be too close to the position,\n        // so the vector would point to the negative position.\n        // Multiplicating the camera position by a big number fixes it.\n        vec3 cameraDirection = normalize(cameraPosition * 1000.0 - vPosition);\n\n        // 1 when facing the camera, 0 when perpendicular\n        float fresnel = dot(vNormal, cameraDirection);\n\n        float iridescence = pow(fresnel, powerFactor) * multiplicator;\n\n        // pingPong function\n        // alternate between two colors,\n        // the function looks like this /\\/\\/\\/\\/\n        float f = abs(1.0 - mod(iridescence + time, 2.0));\n\n        vec3 iridescentColor = mix(firstColor, secondColor, f);\n      `,\n      diffuse: glsl`\n        diffuse = iridescentColor;\n      `,\n    })\n\n    this.geometry = new THREE.PlaneBufferGeometry(SIZE, SIZE, RESOLUTION, RESOLUTION)\n\n    this.geometry.rotateX(-Math.PI / 2)\n\n    this.mesh = new THREE.Mesh(this.geometry, this.material)\n    this.add(this.mesh)\n  }\n\n  update(dt, time) {\n    this.material.uniforms.time.value += dt * this.webgl.controls.hills.speed\n    this.material.uniforms.timeFixed.value = time\n  }\n}\n","// a modified version of https://github.com/mrdoob/three.js/blob/dev/examples/jsm/objects/Reflector.js\n// adapted to work with https://github.com/vanruesc/postprocessing\n\nimport {\n  Color,\n  LinearFilter,\n  MathUtils,\n  Matrix4,\n  Mesh,\n  PerspectiveCamera,\n  Plane,\n  RGBAFormat,\n  ShaderMaterial,\n  UniformsUtils,\n  Vector3,\n  Vector4,\n  WebGLRenderTarget,\n} from 'three'\nimport { SavePass, RenderPass, LambdaPass } from 'postprocessing'\n\nconst ReflectorShader = {\n  uniforms: {\n    color: { value: null },\n    tDiffuse: { value: null },\n    textureMatrix: { value: null },\n  },\n\n  vertexShader: /* glsl */ `\n    uniform mat4 textureMatrix;\n    varying vec4 vUv;\n\n    void main() {\n      vUv = textureMatrix * vec4(position, 1.0);\n\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n\n  fragmentShader: /* glsl */ `\n    uniform vec3 color;\n    uniform sampler2D tDiffuse;\n    varying vec4 vUv;\n\n    float blendOverlay(float base, float blend) {\n      return(base < 0.5 ? (2.0 * base * blend) : (1.0 - 2.0 * (1.0 - base) * (1.0 - blend)));\n    }\n\n    vec3 blendOverlay(vec3 base, vec3 blend) {\n      return vec3(blendOverlay(base.r, blend.r), blendOverlay(base.g, blend.g), blendOverlay(base.b, blend.b));\n    }\n\n    void main() {\n      vec4 base = texture2DProj(tDiffuse, vUv);\n      gl_FragColor = vec4(blendOverlay(base.rgb, color), base.a);\n    }\n  `,\n}\n\nclass ReflectorPostprocessing extends Mesh {\n  constructor(geometry, options = {}) {\n    super(geometry)\n\n    this.type = 'Reflector'\n\n    const { renderer, scene, camera, composer } = options\n\n    const color = options.color !== undefined ? new Color(options.color) : new Color(0x7f7f7f)\n    const textureWidth = options.textureWidth || 512\n    const textureHeight = options.textureHeight || 512\n    const clipBias = options.clipBias || 0\n\n    //\n\n    const reflectorPlane = new Plane()\n    const normal = new Vector3()\n    const reflectorWorldPosition = new Vector3()\n    const cameraWorldPosition = new Vector3()\n    const rotationMatrix = new Matrix4()\n    const lookAtPosition = new Vector3(0, 0, -1)\n    const clipPlane = new Vector4()\n\n    const view = new Vector3()\n    const target = new Vector3()\n    const q = new Vector4()\n\n    const textureMatrix = new Matrix4()\n    const virtualCamera = new PerspectiveCamera()\n\n    const renderTarget = new WebGLRenderTarget(textureWidth, textureHeight, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat,\n      encoding: renderer.outputEncoding,\n    })\n    this.renderTarget = renderTarget\n\n    if (!MathUtils.isPowerOfTwo(textureWidth) || !MathUtils.isPowerOfTwo(textureHeight)) {\n      renderTarget.texture.generateMipmaps = false\n    }\n\n    const shader = options.shader || ReflectorShader\n    const material = new ShaderMaterial({\n      uniforms: UniformsUtils.clone(shader.uniforms),\n      fragmentShader: shader.fragmentShader,\n      vertexShader: shader.vertexShader,\n      transparent: true,\n    })\n\n    material.uniforms.tDiffuse.value = renderTarget.texture\n    material.uniforms.color.value = color\n    material.uniforms.textureMatrix.value = textureMatrix\n\n    this.material = material\n\n    let currentBackgroundAlpha\n    let currentXrEnabled\n    let currentShadowAutoUpdate\n    const onBeforeRender = () => {\n      reflectorWorldPosition.setFromMatrixPosition(this.matrixWorld)\n      cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld)\n\n      rotationMatrix.extractRotation(this.matrixWorld)\n\n      normal.set(0, 0, 1)\n      normal.applyMatrix4(rotationMatrix)\n\n      view.subVectors(reflectorWorldPosition, cameraWorldPosition)\n\n      // Avoid rendering when reflector is facing away\n\n      if (view.dot(normal) > 0) return\n\n      view.reflect(normal).negate()\n      view.add(reflectorWorldPosition)\n\n      rotationMatrix.extractRotation(camera.matrixWorld)\n\n      lookAtPosition.set(0, 0, -1)\n      lookAtPosition.applyMatrix4(rotationMatrix)\n      lookAtPosition.add(cameraWorldPosition)\n\n      target.subVectors(reflectorWorldPosition, lookAtPosition)\n      target.reflect(normal).negate()\n      target.add(reflectorWorldPosition)\n\n      virtualCamera.position.copy(view)\n      virtualCamera.up.set(0, 1, 0)\n      virtualCamera.up.applyMatrix4(rotationMatrix)\n      virtualCamera.up.reflect(normal)\n      virtualCamera.lookAt(target)\n\n      virtualCamera.far = camera.far // Used in WebGLBackground\n\n      virtualCamera.updateMatrixWorld()\n      virtualCamera.projectionMatrix.copy(camera.projectionMatrix)\n\n      // Update the texture matrix\n      textureMatrix.set(\n        0.5,\n        0.0,\n        0.0,\n        0.5,\n        0.0,\n        0.5,\n        0.0,\n        0.5,\n        0.0,\n        0.0,\n        0.5,\n        0.5,\n        0.0,\n        0.0,\n        0.0,\n        1.0\n      )\n      textureMatrix.multiply(virtualCamera.projectionMatrix)\n      textureMatrix.multiply(virtualCamera.matrixWorldInverse)\n      textureMatrix.multiply(this.matrixWorld)\n\n      // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n      // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n      reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition)\n      reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse)\n\n      clipPlane.set(\n        reflectorPlane.normal.x,\n        reflectorPlane.normal.y,\n        reflectorPlane.normal.z,\n        reflectorPlane.constant\n      )\n\n      const projectionMatrix = virtualCamera.projectionMatrix\n\n      q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0]\n      q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5]\n      q.z = -1.0\n      q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14]\n\n      // Calculate the scaled plane vector\n      clipPlane.multiplyScalar(2.0 / clipPlane.dot(q))\n\n      // Replacing the third row of the projection matrix\n      projectionMatrix.elements[2] = clipPlane.x\n      projectionMatrix.elements[6] = clipPlane.y\n      projectionMatrix.elements[10] = clipPlane.z + 1.0 - clipBias\n      projectionMatrix.elements[14] = clipPlane.w\n\n      this.visible = false\n\n      // Render\n      // const currentRenderTarget = renderer.getRenderTarget()\n\n      currentXrEnabled = renderer.xr.enabled\n      currentShadowAutoUpdate = renderer.shadowMap.autoUpdate\n\n      renderer.xr.enabled = false // Avoid camera modification\n      renderer.shadowMap.autoUpdate = false // Avoid re-computing shadows\n\n      // renderer.setRenderTarget(renderTarget)\n\n      renderer.state.buffers.depth.setMask(true) // make sure the depth buffer is writable so it can be properly cleared, see #18897\n\n      // if (renderer.autoClear === false) renderer.clear()\n      // renderer.render(options.scene || scene, virtualCamera)\n\n      // renderer.setRenderTarget(currentRenderTarget)\n    }\n\n    const onAfterRender = () => {\n      this.visible = true\n\n      // renderer.setClearAlpha(currentBackgroundAlpha)\n\n      renderer.xr.enabled = currentXrEnabled\n      renderer.shadowMap.autoUpdate = currentShadowAutoUpdate\n\n      // Restore viewport\n      const viewport = camera.viewport\n      if (viewport !== undefined) {\n        renderer.state.viewport(viewport)\n      }\n    }\n\n    const lambdaPassBefore = new LambdaPass(onBeforeRender)\n    const renderPass = new RenderPass(scene, virtualCamera)\n    const savePass = new SavePass(renderTarget)\n    const lambdaPassAfter = new LambdaPass(onAfterRender)\n\n    material.uniforms.tDiffuse.value = savePass.renderTarget.texture\n\n    composer.addPass(lambdaPassBefore, 0)\n    composer.addPass(renderPass, 1)\n    composer.addPass(savePass, 2)\n    composer.addPass(lambdaPassAfter, 3)\n  }\n}\n\nexport { ReflectorPostprocessing }\n","import * as THREE from 'three'\nimport glsl from 'glslify'\nimport { ReflectorPostprocessing } from '../lib/ReflectorPostprocessing'\n\nexport class Reflection extends THREE.Group {\n  constructor(webgl, options = {}) {\n    super(options)\n    this.webgl = webgl\n    this.options = options\n\n    const geometry = new THREE.CircleBufferGeometry(2, 32)\n    const groundMirror = new ReflectorPostprocessing(geometry, {\n      scene: options.reflected || webgl.scene,\n      renderer: webgl.renderer,\n      camera: webgl.camera,\n      composer: webgl.composer,\n      textureWidth: webgl.width,\n      textureHeight: webgl.height,\n      shader: {\n        uniforms: {\n          color: { value: null },\n          tDiffuse: { value: null },\n          textureMatrix: { value: null },\n        },\n\n        vertexShader: glsl`\n          uniform mat4 textureMatrix;\n          varying vec4 vUvProj;\n          varying vec2 vUv;\n\n          void main() {\n            vUv = uv;\n            vUvProj = textureMatrix * vec4(position, 1.0);\n\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          }\n        `,\n        fragmentShader: glsl`\n          uniform sampler2D tDiffuse;\n          varying vec4 vUvProj;\n          varying vec2 vUv;\n\n          #pragma glslify: ease = require(glsl-easings/quartic-out)\n\n          void main() {\n            vec4 base = texture2DProj(tDiffuse, vUvProj);\n\n            gl_FragColor.xyz = base.rgb;\n\n            // fade out\n            vec2 center = vec2(0.5);\n            float distanceFactor = 1.2;\n            float startOpacity = 0.8;\n            float fadeOut = ease(min(distance(center, vUv) * 2.0 * distanceFactor, 1.0));\n            gl_FragColor.a = mix(base.a * startOpacity, 0.0, fadeOut);\n          }\n        `,\n      },\n    })\n\n    groundMirror.position.y = 0.15\n    groundMirror.rotateX(-Math.PI / 2)\n    this.add(groundMirror)\n  }\n}\n","import * as THREE from 'three'\n\n/**\n * Helper classes which shows a reticle on hit-test on debug mode.\n * It also exposes some useful methods:\n * - isHitting\n * - onARPointerDown()\n * - onARPointerUp()\n * - onFirstHit()\n * - getPose()\n */\nexport class XRState extends THREE.Group {\n  reticle\n  controller\n  _pointerDownListeners = []\n  _pointerUpListeners = []\n  _firstHitListeners = []\n  _hitTestSourceRequested = false\n  _hitTestSource\n  _initialized = false\n\n  get isHitting() {\n    return this.reticle.visible\n  }\n\n  constructor(webgl, options = {}) {\n    super(options)\n    this.webgl = webgl\n    this.options = options\n\n    this.reticle = new THREE.Mesh(\n      new THREE.RingBufferGeometry(0.15, 0.2, 64).rotateX(-Math.PI / 2),\n      new THREE.MeshBasicMaterial({ transparent: true, opacity: 0.3, depthWrite: false })\n    )\n    this.reticle.matrixAutoUpdate = false\n    this.reticle.visible = false\n\n    if (window.DEBUG) {\n      this.add(this.reticle)\n    }\n\n    this.controller = this.webgl.renderer.xr.getController(0)\n    this.add(this.controller)\n\n    // on click of the AR\n    // the controller will have the position of the click on the screen\n    this.controller.addEventListener('selectstart', this._onSelectStart)\n    this.controller.addEventListener('selectend', this._onSelectEnd)\n  }\n\n  reset() {\n    this.controller.removeEventListener('selectstart', this._onSelectStart)\n    this.controller.removeEventListener('selectend', this._onSelectEnd)\n\n    this._pointerDownListeners.length = 0\n    this._pointerUpListeners.length = 0\n    this._firstHitListeners.length = 0\n\n    this._initialized = false\n    this._hitTestSource = undefined\n    this._hitTestSourceRequested = false\n  }\n\n  _onSelectStart = (event) => {\n    // call all the listeners\n    this._pointerDownListeners.forEach((listener) => listener(event, this.controller))\n  }\n\n  _onSelectEnd = (event) => {\n    // call all the listeners\n    this._pointerUpListeners.forEach((listener) => listener(event, this.controller))\n  }\n\n  onARPointerDown(fn) {\n    this._pointerDownListeners.push(fn)\n  }\n\n  offARPointerDown(fn) {\n    const index = this._pointerDownListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this._pointerDownListeners.splice(index, 1)\n  }\n\n  onARPointerUp(fn) {\n    this._pointerUpListeners.push(fn)\n  }\n\n  offARPointerUp(fn) {\n    const index = this._pointerUpListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this._pointerUpListeners.splice(index, 1)\n  }\n\n  onFirstHit(fn) {\n    this._firstHitListeners.push(fn)\n  }\n\n  offFirstHit(fn) {\n    const index = this._firstHitListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this._firstHitListeners.splice(index, 1)\n  }\n\n  // get the matrix of the reticle\n  getPose(xframe) {\n    if (!this._hitTestSourceRequested) {\n      this._hitTestSourceRequested = true\n\n      const session = this.webgl.renderer.xr.getSession()\n      session\n        .requestReferenceSpace('viewer')\n        .then((space) => session.requestHitTestSource({ space }))\n        .then((_hitTestSource) => {\n          this._hitTestSource = _hitTestSource\n        })\n    }\n\n    if (!this._hitTestSource) {\n      return\n    }\n\n    const hitTestResults = xframe.getHitTestResults(this._hitTestSource)\n\n    if (hitTestResults.length === 0) {\n      return\n    }\n\n    const hit = hitTestResults[0]\n    const referenceSpace = this.webgl.renderer.xr.getReferenceSpace()\n    return hit.getPose(referenceSpace).transform.matrix\n  }\n\n  update(dt, time, xrframe) {\n    // if we're entered the XR view\n    if (!xrframe) {\n      return\n    }\n\n    const pose = this.getPose(xrframe)\n\n    // if we're hitting something\n    if (pose) {\n      this.reticle.visible = true\n      this.reticle.matrix.fromArray(pose)\n      this.reticle.position.setFromMatrixPosition(this.reticle.matrix)\n      if (!this._initialized) {\n        this._initialized = true\n\n        // call all the listeners\n        this._firstHitListeners.forEach((listener) => listener(event, pose))\n      }\n    } else {\n      this.reticle.visible = false\n    }\n  }\n}\n","import { SMAAImageLoader, SMAAEffect as SMAAEffectPostproccessing } from 'postprocessing'\n\n// simple promise SMAAEffect wrapper\nexport function SMAAEffect(...options) {\n  return new Promise((resolve) => {\n    new SMAAImageLoader().load(([search, area]) => {\n      const smaaEffect = new SMAAEffectPostproccessing(search, area, ...options)\n      resolve(smaaEffect)\n    })\n  })\n}\n","export async function isARSupported() {\n  if (!('xr' in navigator)) {\n    return false\n  }\n\n  const supported = await navigator.xr.isSessionSupported('immersive-ar')\n\n  if (!supported) {\n    return false\n  }\n\n  return supported\n}\n\nexport function requestARSession(xr) {\n  return navigator.xr\n    .requestSession('immersive-ar', {\n      requiredFeatures: ['local', 'hit-test', 'dom-overlay'],\n      domOverlay: {\n        root: document.querySelector('#ar-ui'),\n      },\n    })\n    .then(async (session) => {\n      xr.setReferenceSpaceType('local')\n      await xr.setSession(session)\n\n      return session\n    })\n}\n","import * as THREE from 'three'\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader'\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader'\nimport { addUniforms, customizeFragmentShader } from '../lib/customizeShader'\n\n// adapted from\n// https://github.com/mrdoob/three.js/blob/master/examples/webgl_shadow_contact.html\n\nexport default class ContactShadow extends THREE.Group {\n  constructor(webgl, options = {}) {\n    super(options)\n    this.webgl = webgl\n    this.options = options\n\n    // the object to render with the shadow camera\n    this.object = this.options.object\n\n    this.RESOLUTION = options.resolution ?? 512 / 2\n    this.PLANE_WIDTH = options.width ?? 2.6 * 0.1\n    this.PLANE_HEIGHT = options.height ?? 2.6 * 0.1\n    this.CAMERA_DEPTH = options.depth ?? 0.3 * 0.1\n    this.BLUR = options.blur ?? 4 // 0 to n\n    this.BLUR_SECOND_PASS = options.blurSecondPass ?? this.BLUR * 0.4\n    this.DARKNESS = options.darkness ?? 1\n    this.OPACITY = options.opacity ?? 1\n\n    // the render target that will show the shadows in the plane texture\n    this.renderTarget = new THREE.WebGLRenderTarget(this.RESOLUTION, this.RESOLUTION)\n\n    this.renderTarget.texture.generateMipmaps = false\n\n    // the render target that we will use to blur the first render target\n    this.renderTargetBlur = new THREE.WebGLRenderTarget(this.RESOLUTION, this.RESOLUTION)\n    this.renderTargetBlur.texture.generateMipmaps = false\n\n    // make a plane and make it face up\n    const geometry = new THREE.PlaneBufferGeometry(this.PLANE_WIDTH, this.PLANE_HEIGHT).rotateX(\n      Math.PI / 2\n    )\n    const material = new THREE.MeshBasicMaterial({\n      map: this.renderTarget.texture,\n      opacity: this.OPACITY,\n      transparent: true,\n    })\n    this.plane = new THREE.Mesh(geometry, material)\n    this.add(this.plane)\n\n    // the y from the texture is flipped!\n    this.plane.scale.y = -1\n\n    // the plane onto which to blur the texture\n    this.blurPlane = new THREE.Mesh(geometry)\n    this.add(this.blurPlane)\n    this.blurPlane.visible = false\n\n    // the camera to render the depth material from\n    this.shadowCamera = new THREE.OrthographicCamera(\n      -this.PLANE_WIDTH / 2,\n      this.PLANE_WIDTH / 2,\n      this.PLANE_HEIGHT / 2,\n      -this.PLANE_HEIGHT / 2,\n      0,\n      this.CAMERA_DEPTH\n    )\n    this.shadowCamera.rotation.x = Math.PI / 2 // get the camera to look up\n    this.add(this.shadowCamera)\n\n    this.cameraHelper = new THREE.CameraHelper(this.shadowCamera)\n\n    // like MeshDepthMaterial, but goes from black to transparent\n    this.depthMaterial = new THREE.MeshDepthMaterial()\n    this.depthMaterial.skinning = true\n    this.depthMaterial.depthTest = false\n    this.depthMaterial.depthWrite = false\n    addUniforms(this.depthMaterial, {\n      darkness: { value: this.DARKNESS },\n    })\n    customizeFragmentShader(this.depthMaterial, {\n      head: /* glsl */ `\n        uniform float darkness;\n      `,\n      'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );': /* glsl */ `\n        gl_FragColor = vec4(vec3(0.0), (1.0 - fragCoordZ) * darkness);\n      `,\n    })\n\n    this.horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader)\n    this.horizontalBlurMaterial.depthTest = false\n\n    this.verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader)\n    this.verticalBlurMaterial.depthTest = false\n  }\n\n  // renderTarget --> blurPlane (horizontalBlur) --> renderTargetBlur --> blurPlane (verticalBlur) --> renderTarget -->\n  // renderTarget --> blurPlane (horizontalBlur) --> renderTargetBlur --> blurPlane (verticalBlur) --> renderTarget\n  blurShadow(amount) {\n    const { mapLinear } = THREE.MathUtils\n\n    this.blurPlane.visible = true\n\n    // blur horizontally and draw in the renderTargetBlur\n    this.blurPlane.material = this.horizontalBlurMaterial\n    this.blurPlane.material.uniforms.tDiffuse.value = this.renderTarget.texture\n    this.horizontalBlurMaterial.uniforms.h.value = mapLinear(amount, 0, 1, 0, 1 / 256)\n\n    this.webgl.renderer.setRenderTarget(this.renderTargetBlur)\n    this.webgl.renderer.clear()\n    this.webgl.renderer.render(this.blurPlane, this.shadowCamera)\n\n    // blur vertically and draw in the main renderTarget\n    this.blurPlane.material = this.verticalBlurMaterial\n    this.blurPlane.material.uniforms.tDiffuse.value = this.renderTargetBlur.texture\n    this.verticalBlurMaterial.uniforms.v.value = mapLinear(amount, 0, 1, 0, 1 / 256)\n\n    this.webgl.renderer.setRenderTarget(this.renderTarget)\n    this.webgl.renderer.clear()\n    this.webgl.renderer.render(this.blurPlane, this.shadowCamera)\n\n    this.blurPlane.visible = false\n  }\n\n  update(dt, time) {\n    // remove the background and reset all\n    const initialBackground = this.webgl.scene.background\n    this.webgl.scene.background = null\n    const initialXREnabled = this.webgl.renderer.xr.enabled\n    this.webgl.renderer.xr.enabled = false // https://github.com/mrdoob/three.js/issues/18746\n    this.cameraHelper.visible = false\n\n    // force the depthMaterial to everything\n    // this.webgl.scene.overrideMaterial = this.depthMaterial\n    const initialMaterials = {}\n    this.object.traverse((child) => {\n      if (child.isMesh) {\n        initialMaterials[child.id] = child.material\n        child.material = this.depthMaterial\n      }\n    })\n\n    // render in the render target to get the depths\n    this.webgl.renderer.setRenderTarget(this.renderTarget)\n    this.webgl.renderer.clear()\n    this.webgl.renderer.render(this.object, this.shadowCamera)\n\n    // blur the shadow\n    this.blurShadow(this.BLUR)\n\n    // a second pass to reduce the square artifacts!\n    if (this.BLUR_SECOND_PASS !== 0) {\n      this.blurShadow(this.BLUR_SECOND_PASS)\n    }\n\n    // and reset the overrided material\n    // this.webgl.scene.overrideMaterial = null\n    this.object.traverse((child) => {\n      if (child.isMesh) {\n        child.material = initialMaterials[child.id]\n      }\n    })\n\n    // reset everything\n    this.cameraHelper.visible = true\n    this.webgl.scene.background = initialBackground\n    this.webgl.renderer.xr.enabled = initialXREnabled\n    this.webgl.renderer.setRenderTarget(null)\n  }\n}\n","import * as THREE from 'three'\nimport { BloomEffect, KernelSize, EffectPass, BlendFunction, VignetteEffect } from 'postprocessing'\nimport { clamp } from 'lodash'\nimport eases from 'eases'\nimport WebGLApp from './lib/WebGLApp'\nimport assets from './lib/AssetManager'\nimport { Ephebe } from './scene/Ephebe'\nimport { Hills } from './scene/Hills'\nimport { Reflection } from './scene/Reflection'\nimport { XRState } from './lib/XRState'\nimport { SMAAEffect } from './lib/SMAAEffect'\nimport { isARSupported, requestARSession } from './lib/xr-utils'\nimport ContactShadow from './lib/ContactShadow'\n\nwindow.DEBUG = window.location.search.includes('debug')\n\n// grab our canvas\nconst canvas = document.querySelector('#app')\n\n// setup the WebGLRenderer\nconst webgl = new WebGLApp({\n  canvas,\n  backgroundAlpha: 0,\n  controls: {\n    ephebe: {\n      powerFactor: {\n        value: 0.8,\n        max: 5,\n      },\n      speed: {\n        value: 0.1,\n        max: 10,\n        scale: 'exp',\n      },\n      multiplicator: {\n        value: 1,\n        max: 10,\n        scale: 'exp',\n      },\n    },\n    hills: {\n      powerFactor: {\n        value: 1.13,\n        max: 5,\n      },\n      speed: {\n        value: 0.3,\n        max: 10,\n        scale: 'exp',\n      },\n      multiplicator: {\n        value: 2.5,\n        max: 20,\n        scale: 'exp',\n      },\n      firstColor: '#CE1DC5',\n      secondColor: '#73e600',\n    },\n  },\n  closeControls: !window.DEBUG,\n  showFps: window.DEBUG,\n  cameraPosition: new THREE.Vector3(-1, 2, 5),\n  orbitControls: {\n    target: new THREE.Vector3(0, 1.2, 0),\n    maxPolarAngle: !window.DEBUG ? Math.PI / 1.94 : Math.PI,\n  },\n  xr: true,\n  gamma: true,\n  antialias: false,\n  maxPixelRatio: 1,\n  postprocessing: true,\n  multisampling: 0,\n})\n\n// attach it to the window to inspect in the console\nif (window.DEBUG) {\n  window.webgl = webgl\n}\n\nconst envmapKey = assets.queue({\n  url: 'assets/envMaps/nebula_optimized.jpg',\n  type: 'envmap',\n})\n\n// load any queued assets\nassets.load({ renderer: webgl.renderer }).then(async () => {\n  // limit zoom\n  const DOLLY_DELAY = 1\n  const DOLLY_DURATION = 3\n  const MIN_DISTANCE = 0.7\n  const MAX_DISTANCE = 5.05\n  const ROTATE_SPEED = 2\n  const ROTATE_SPEED_SLOW = 0.6\n  const SLOW_DOWN_DURATION = 2\n  if (!window.DEBUG) {\n    webgl.orbitControls.autoRotate = true\n    webgl.orbitControls.autoRotateSpeed = -ROTATE_SPEED\n\n    // ideally..\n    // https://github.com/mrdoob/three.js/pull/21162\n    // const currentDistance = webgl.orbitControls.getDistance()\n    // webgl.orbitControls.maxDistance = currentDistance\n    webgl.orbitControls.maxDistance = MAX_DISTANCE\n    webgl.orbitControls.minDistance = MIN_DISTANCE\n\n    // hacks because of\n    // https://github.com/mrdoob/three.js/pull/9005\n    webgl.orbitControls.maxDistance = MIN_DISTANCE\n    webgl.orbitControls.update()\n    webgl.orbitControls.maxDistance = MAX_DISTANCE\n    webgl.orbitControls.update()\n\n    // dolly out\n    const startTime = webgl.time + DOLLY_DELAY\n    webgl.onUpdate((dt, time) => {\n      const t = eases.quartInOut(clamp((time - startTime) / DOLLY_DURATION, 0, 1))\n\n      if (t < 1) {\n        // hacks because of\n        // https://github.com/mrdoob/three.js/pull/9005\n        webgl.orbitControls.minDistance = THREE.MathUtils.lerp(MIN_DISTANCE, MAX_DISTANCE, t)\n      } else {\n        webgl.orbitControls.minDistance = MIN_DISTANCE\n      }\n    })\n\n    // slow down rotation\n    const startTimeRotate = webgl.time + DOLLY_DELAY + DOLLY_DURATION - 1\n    webgl.onUpdate((dt, time) => {\n      const t = clamp((time - startTimeRotate) / SLOW_DOWN_DURATION, 0, 1)\n\n      if (t < 1) {\n        webgl.orbitControls.autoRotateSpeed = -THREE.MathUtils.lerp(\n          ROTATE_SPEED,\n          ROTATE_SPEED_SLOW,\n          t\n        )\n      } else {\n        webgl.orbitControls.autoRotateSpeed = -ROTATE_SPEED_SLOW\n      }\n    })\n  }\n\n  // add any \"WebGL components\" here...\n  const ephebe = Ephebe(webgl)\n  webgl.scene.add(ephebe)\n  const hills = new Hills(webgl)\n  webgl.scene.add(hills)\n  const reflection = new Reflection(webgl, { reflected: ephebe })\n  webgl.scene.add(reflection)\n\n  // scene background\n  webgl.scene.background = assets.get(envmapKey)\n\n  // postprocessing\n  const bloomEffect = new BloomEffect({\n    blendFunction: BlendFunction.ADD,\n    kernelSize: KernelSize.LARGE,\n    luminanceThreshold: 0.4,\n    luminanceSmoothing: 0.15,\n    height: 480,\n  })\n\n  const vignetteEffect = new VignetteEffect()\n\n  const smaaEffect = await SMAAEffect()\n\n  webgl.composer.addPass(new EffectPass(webgl.camera, smaaEffect, bloomEffect, vignetteEffect))\n\n  // start animation loop\n  webgl.start()\n\n  // enable webxr\n  isARSupported(webgl.renderer.xr).then((isSupported) => {\n    if (!isSupported) {\n      return\n    }\n\n    const EPHEBE_XR_SCALE = 0.1\n\n    const button = document.querySelector('#ar-button')\n    const ui = document.querySelector('#ar-ui')\n    const closeButton = ui.querySelector('#ar-close-button')\n\n    const mainScene = webgl.scene\n    const xrScene = new THREE.Scene()\n\n    const xrstate = new XRState(webgl)\n    xrScene.add(xrstate)\n\n    const shadow = new ContactShadow(webgl, {\n      object: ephebe,\n      resolution: 256,\n      width: 2.6 * EPHEBE_XR_SCALE,\n      height: 2.6 * EPHEBE_XR_SCALE,\n      depth: 0.3 * EPHEBE_XR_SCALE,\n    })\n\n    // reveal the button after the camera transition\n    button.style.display = 'block'\n    if (window.DEBUG) {\n      button.style.opacity = 1\n    } else {\n      setTimeout(() => {\n        button.style.opacity = 1\n      }, (webgl.time + DOLLY_DELAY + DOLLY_DURATION) * 1000)\n    }\n\n    // add the debug panel also in AR\n    if (window.DEBUG) {\n      ui.appendChild(webgl.stats.dom)\n      // move them down a bit,\n      // some phones have round corners\n      const fpsCanvases = [...webgl.stats.dom.children]\n      fpsCanvases.forEach((fpsCanvas) => {\n        fpsCanvas.style.top = '1rem'\n      })\n    }\n\n    button.addEventListener('click', () => {\n      requestARSession(webgl.renderer.xr)\n        .then((session) => {\n          webgl.scene = xrScene\n          webgl.orbitControls.enabled = false\n          const cameraPosition = webgl.camera.position.clone()\n          const ephebePosition = ephebe.position.clone()\n          const ephebeScale = ephebe.scale.clone()\n\n          ui.style.display = 'block'\n\n          // add ephebe on first hit test\n          xrstate.onFirstHit(() => {\n            mainScene.remove(ephebe)\n            xrScene.add(ephebe)\n            ephebe.position.copy(xrstate.reticle.position)\n            ephebe.scale.multiplyScalar(EPHEBE_XR_SCALE)\n\n            xrScene.add(shadow)\n            if (window.DEBUG) {\n              xrScene.add(shadow.cameraHelper)\n            }\n            shadow.position.copy(xrstate.reticle.position)\n          })\n\n          // set ephebe position on click\n          xrstate.onARPointerDown(() => {\n            if (!xrstate.isHitting) {\n              return\n            }\n\n            ephebe.position.copy(xrstate.reticle.position)\n            shadow.position.copy(xrstate.reticle.position)\n          })\n\n          closeButton.addEventListener('click', () => session.end(), { once: true })\n          session.addEventListener('end', () => {\n            // TODO test multiple re-enters\n            webgl.scene = mainScene\n            webgl.orbitControls.enabled = true\n            webgl.camera.position.copy(cameraPosition)\n\n            xrstate.reset()\n\n            ui.style.display = 'none'\n\n            xrScene.remove(ephebe)\n            mainScene.add(ephebe)\n            ephebe.position.copy(ephebePosition)\n            ephebe.scale.copy(ephebeScale)\n\n            xrScene.remove(shadow)\n            if (window.DEBUG) {\n              xrScene.remove(shadow.cameraHelper)\n            }\n          })\n        })\n        .catch(() => {\n          // the user declined the popup!\n          // do nothing\n        })\n    })\n  })\n})\n"],"sourceRoot":""}